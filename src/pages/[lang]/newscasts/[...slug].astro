---
	import { getCollection, getEntryBySlug } from 'astro:content';
	import { getLinkcastType } from '@lib/embeds'
	import { Avatar } from '@skeletonlabs/skeleton';

    import Linkcasts from "@components/linkcasts/Linkcasts.astro"
    import LinkCastLayout from "@layouts/LinkCastLayout.astro"
	import LinkcastHeader from '@components/linkcasts/LinkcastHeader.svelte';

	// 1. Generate a new path for every collection linkcast
	export async function getStaticPaths() {

		const linkCasts = await getCollection('linkcasts');

		const paths = linkCasts.map(linkcast => {
			return {
				params: { lang: "en", slug: linkcast.slug || undefined },
				props: linkcast
			}
		});

		return paths
	}

	const { slug } = Astro.params;
	const linkcast = await getEntryBySlug('linkcasts', slug);
	const linkCasts = await getCollection('linkcasts');
	const { Content } = await linkcast.render();
	// console.log("slug",slug, linkcast)
---

<LinkCastLayout description={linkcast.data?.description} title={linkcast.data?.title} image={linkcast.data?.image} imageAlt={linkcast.data?.imageAlt}>
	<div class="card landscape:grid landscape:xs:grid-cols-2 landscape:sm:grid-cols-3 landscape:md:grid-cols-3 landscape:xl:grid-cols-3 landscape:gap-0">
		<header id="header" class="landscape:xs:col-span-1 landscape:sm:col-span-2 landscape:md:col-span-2 landscape:xl:col-span-2 landscape:max-h-[85vh] landscape:overflow-hidden landscape:overflow-y-auto landscape:object-contain bg-black sticky aspect-video top-0 portrait:top-16 ">
			<LinkcastHeader linkcast={linkcast} type={getLinkcastType(linkcast.data?.url)} client:load />
		</header>
		<!-- Body -->
		<main class="p-4 space-y-4 landscape:col-span-1">
			<h5 class="text-primary-500 font-semibold">{linkcast.data?.category || 'News & Announcments'}</h5>

			<h3 class="font-black text-xl">{linkcast.data?.title}</h3>

			<h4 class="font-medium">
				{linkcast.data?.subtitle &&
					<span>{linkcast.data?.subtitle}</span>
				}
				<span class="marker text-xs badge badge-filled-primary">
					{getLinkcastType(linkcast.data?.url)}
				</span>
			</h4>

			<input id="read-more" type="checkbox" class="peer/read hidden" />
			<article class="overflow-hidden landscape:h-[25vh] portrait:h-24 peer-checked/read:h-auto text-lg space-y-6">
				<Content />
				<div class="grid grid-rows-1 gap-4">
					{linkcast.data?.url &&
						<a class="btn btn-filled-primary" href={linkcast.data?.url} target="_blank" rel="noreferrer">{linkcast.data?.url}</a>
					}
				</div>
			</article>

			<label for="read-more" class="hidden peer-checked/read:block btn rounded-lg variant-filled-primary max-w-md mx-auto">Read less</label>
			<label for="read-more" class="block peer-checked/read:hidden btn rounded-lg variant-filled-primary max-w-md mx-auto">Read more</label>

			<hr />
			<!-- Footer -->
			<footer class="p-4 flex justify-start items-center space-x-4">
				<Avatar src={linkcast.data?.authorImage || '/images/red-black-purple-gold-with-sun.svg'} />
				<div class="flex-auto flex justify-between items-center">
					<h6 class="font-bold">By {linkcast.data?.author || 'LMS Parrot'}</h6>
					<small>On {new Date(linkcast.data?.date).toLocaleDateString()}</small>
				</div>
			</footer>
		</main>
	</div>

    <Linkcasts start="1" />
</LinkCastLayout>
