---
import { getCollection } from 'astro:content'
import { getLangFromUrl, useTranslations } from '@i18n/utils';
import { Icon } from 'astro-icon'

const pageList = await getCollection('pages');
const {direction = "vertical", size = "h-8 w-8 p-1"} = Astro.props
const directionClass = direction == "vertical" ? "flex flex-col items-center text-center" : "flex items-center"
const parentDirectionClass = direction == "vertical" ? "flex flex-col items-center text-center" : "flex-flex-col items-center"

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<div class={parentDirectionClass}>

    <a href={"/" + lang + "/"} class="btn variant-filled-primary w-full rounded-none py-4">
        <span class={directionClass}>
            <Icon pack="ph" name="house-line-bold" class={size}/>
            <span>
                {t('nav.home')}
            </span>
        </span>
    </a>

    <a href={"/" + lang + "/newscasts"} class="btn variant-filled-primary w-full rounded-none py-4">
        <span class={directionClass}>
            <Icon pack="ph" name="newspaper-clipping-bold" class={size} />
            <span>
                Newscasts
            </span>
        </span>
    </a>


{pageList && pageList.filter(page => page.data?.status == 'published' && !page.data?.parent).map(page => (
    <a href={"/" + page.slug} class={"btn variant-filled-primary w-full rounded-none py-4 " + page.slug.split('/')[0]}>
        <span class={directionClass}>
            <Icon pack={page.data.iconFamily || "teenyicons"} name={page.data.icon || "anchor-solid"} class={size} />
            { page.data?.shortTitle ?
            <span>
                {page.data.shortTitle}
            </span>
            :
            <span>
                {page.data.title}
            </span>
            }
        </span>
    </a>
))}
</div>

<style is:global>
    html.nl a.en,
    html.en a.nl {
        display: none;
    }
</style>
